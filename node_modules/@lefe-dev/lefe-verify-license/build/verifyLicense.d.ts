import { ScopesTree, ScopeName, Organization, LicensingModel, LicenseStatus } from "@lefe-dev/lefe-license-utils";
export interface DecodedLicenseDetails {
    version: number | null;
    scope: ScopeName | null;
    licensingModel: LicensingModel | null;
    organization: Organization | null;
    expiryTimestamp: number | null;
    domain?: string;
}
export declare class LicenseVerifier {
    scopes: ScopesTree;
    organization: Organization;
    constructor({ scopes, organization, }: {
        scopes: ScopesTree;
        organization: Organization;
    });
    private static isLicenseScopeSufficient;
    /**
     * Format: V=${version},ON=${orderNumber},S=${scope},L=${licensingModel},O=${organization},E=${expiryTimestamp},D=${domain}`;
     */
    private static decodeLicense;
    verifyLicense({ licenseKey, packageScope, }: {
        licenseKey?: string;
        packageScope: ScopeName;
    }): {
        status: LicenseStatus;
        meta?: object;
    };
}
